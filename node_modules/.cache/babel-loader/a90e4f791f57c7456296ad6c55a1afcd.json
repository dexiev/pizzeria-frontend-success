{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import API from\"../../API\";import{signInAction,signUpAction,signOutAction}from\"./actions\";import{push}from\"connected-react-router\";var api=new API();var LOGIN_USER_KEY=\"LOGIN_USER_KEY\";export var fetchUserFromLocalStorage=function fetchUserFromLocalStorage(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var userJSON;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:userJSON=localStorage.getItem(LOGIN_USER_KEY);if(userJSON&&userJSON.token!==\"\"){dispatch(signInAction(JSON.parse(userJSON)));}case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var signUp=function signUp(user_name,email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(user_name===\"\"||email===\"\"||password===\"\")){_context2.next=3;break;}alert(\"Please fill out name, email, and password.\");return _context2.abrupt(\"return\",false);case 3:return _context2.abrupt(\"return\",api.signUp(user_name,email,password).then(function(user){dispatch(signUpAction(user));localStorage.setItem(LOGIN_USER_KEY,JSON.stringify(user));dispatch(push(\"/\"));}).catch(function(error){alert(\"Failed to connect API \");console.log(error);}));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var signIn=function signIn(email,password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!(email===\"\"||password===\"\")){_context3.next=3;break;}alert(\"Please fill out email and password.\");return _context3.abrupt(\"return\",false);case 3:return _context3.abrupt(\"return\",api.signIn(email,password).then(function(user){dispatch(signInAction(user));localStorage.setItem(LOGIN_USER_KEY,JSON.stringify(user));dispatch(push(\"/\"));}).catch(function(error){alert(\"Failed to connect API to add a post\");console.log(error);}));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var signOut=function signOut(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch(signOutAction());localStorage.removeItem(LOGIN_USER_KEY);dispatch(push(\"/signin\"));case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/src/reducks/user/operations.js"],"names":["API","signInAction","signUpAction","signOutAction","push","api","LOGIN_USER_KEY","fetchUserFromLocalStorage","dispatch","userJSON","localStorage","getItem","token","JSON","parse","signUp","user_name","email","password","alert","then","user","setItem","stringify","catch","error","console","log","signIn","signOut","removeItem"],"mappings":"+PAAA,MAAOA,CAAAA,GAAP,KAAgB,WAAhB,CACA,OAASC,YAAT,CAAuBC,YAAvB,CAAqCC,aAArC,KAA0D,WAA1D,CACA,OAASC,IAAT,KAAqB,wBAArB,CAEA,GAAMC,CAAAA,GAAG,CAAG,GAAIL,CAAAA,GAAJ,EAAZ,CACA,GAAMM,CAAAA,cAAc,CAAG,gBAAvB,CAEA,MAAO,IAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,EAAM,CAC7C,+FAAO,iBAAOC,QAAP,+HACCC,QADD,CACYC,YAAY,CAACC,OAAb,CAAqBL,cAArB,CADZ,CAEL,GAAIG,QAAQ,EAAIA,QAAQ,CAACG,KAAT,GAAmB,EAAnC,CAAuC,CACrCJ,QAAQ,CAACP,YAAY,CAACY,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAD,CAAb,CAAR,CACD,CAJI,sDAAP,+DAMD,CAPM,CASP,MAAO,IAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,SAAD,CAAYC,KAAZ,CAAmBC,QAAnB,CAAgC,CACpD,gGAAO,kBAAOV,QAAP,2HAEDQ,SAAS,GAAK,EAAd,EAAoBC,KAAK,GAAK,EAA9B,EAAoCC,QAAQ,GAAK,EAFhD,2BAGHC,KAAK,CAAC,4CAAD,CAAL,CAHG,iCAII,KAJJ,0CAOEd,GAAG,CACPU,MADI,CACGC,SADH,CACcC,KADd,CACqBC,QADrB,EAEJE,IAFI,CAEC,SAACC,IAAD,CAAU,CACdb,QAAQ,CAACN,YAAY,CAACmB,IAAD,CAAb,CAAR,CACAX,YAAY,CAACY,OAAb,CAAqBhB,cAArB,CAAqCO,IAAI,CAACU,SAAL,CAAeF,IAAf,CAArC,EACAb,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR,CACD,CANI,EAOJoB,KAPI,CAOE,SAACC,KAAD,CAAW,CAChBN,KAAK,CAAC,wBAAD,CAAL,CACAO,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAVI,CAPF,0DAAP,iEAmBD,CApBM,CAsBP,MAAO,IAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACX,KAAD,CAAQC,QAAR,CAAqB,CACzC,gGAAO,kBAAOV,QAAP,2HAEDS,KAAK,GAAK,EAAV,EAAgBC,QAAQ,GAAK,EAF5B,2BAGHC,KAAK,CAAC,qCAAD,CAAL,CAHG,iCAII,KAJJ,0CAOEd,GAAG,CACPuB,MADI,CACGX,KADH,CACUC,QADV,EAEJE,IAFI,CAEC,SAACC,IAAD,CAAU,CACdb,QAAQ,CAACP,YAAY,CAACoB,IAAD,CAAb,CAAR,CACAX,YAAY,CAACY,OAAb,CAAqBhB,cAArB,CAAqCO,IAAI,CAACU,SAAL,CAAeF,IAAf,CAArC,EACAb,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR,CACD,CANI,EAOJoB,KAPI,CAOE,SAACC,KAAD,CAAW,CAChBN,KAAK,CAAC,qCAAD,CAAL,CACAO,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAVI,CAPF,0DAAP,iEAmBD,CApBM,CAsBP,MAAO,IAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAC3B,gGAAO,kBAAOrB,QAAP,sHACLA,QAAQ,CAACL,aAAa,EAAd,CAAR,CACAO,YAAY,CAACoB,UAAb,CAAwBxB,cAAxB,EACAE,QAAQ,CAACJ,IAAI,CAAC,SAAD,CAAL,CAAR,CAHK,wDAAP,iEAKD,CANM","sourcesContent":["import API from \"../../API\";\nimport { signInAction, signUpAction, signOutAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\n\nexport const fetchUserFromLocalStorage = () => {\n  return async (dispatch) => {\n    const userJSON = localStorage.getItem(LOGIN_USER_KEY);\n    if (userJSON && userJSON.token !== \"\") {\n      dispatch(signInAction(JSON.parse(userJSON)));\n    }\n  };\n};\n\nexport const signUp = (user_name, email, password) => {\n  return async (dispatch) => {\n    // Validation\n    if (user_name === \"\" || email === \"\" || password === \"\") {\n      alert(\"Please fill out name, email, and password.\");\n      return false;\n    }\n\n    return api\n      .signUp(user_name, email, password)\n      .then((user) => {\n        dispatch(signUpAction(user));\n        localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n        dispatch(push(\"/\"));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API \");\n        console.log(error);\n      });\n  };\n};\n\nexport const signIn = (email, password) => {\n  return async (dispatch) => {\n    // Validation\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out email and password.\");\n      return false;\n    }\n\n    return api\n      .signIn(email, password)\n      .then((user) => {\n        dispatch(signInAction(user));\n        localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n        dispatch(push(\"/\"));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to add a post\");\n        console.log(error);\n      });\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    dispatch(signOutAction());\n    localStorage.removeItem(LOGIN_USER_KEY);\n    dispatch(push(\"/signin\"));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}