{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import API from\"../../API\";import{addCartAction,fetchCartItemsAction,increaseCartAction,decreaseCartAction}from\"./actions\";import{push}from\"connected-react-router\";var api=new API();var CARTS_KEY=\"CARTS_KEY\";export var fetchCarts=function fetchCarts(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",api.getCarts().then(function(carts){var subtotal=calculateSubtotal(carts);dispatch(fetchCartItemsAction(carts,subtotal));}).catch(function(error){alert(\"Failed to connect API: /carts/\");}));case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var addCart=function addCart(item){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",api.addCarts(item.id).then(function(addedCart){var prevCarts=getState().carts.list;addedCart[\"item\"]=item;prevCarts.push(addedCart);var subtotal=calculateSubtotal(prevCarts);dispatch(addCartAction(prevCarts,subtotal));}).catch(function(error){alert(\"Failed to connect API to add cart\");console.log(error);}));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();};export var increaseCart=function increaseCart(cart_id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var prevCarts,matchedCarts,nextSelectedCount;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:prevCarts=getState().carts.list;matchedCarts=prevCarts.filter(function(cart){return cart.id==cart_id;});nextSelectedCount=matchedCarts[0].quantity+1;return _context3.abrupt(\"return\",api.updateCarts(cart_id,nextSelectedCount).then(function(updatedCart){prevCarts=prevCarts.filter(function(cart){return cart.id!=cart_id;});prevCarts.push(updatedCart);var subtotal=calculateSubtotal(prevCarts);dispatch(increaseCartAction(prevCarts,subtotal));}).catch(function(error){alert(\"Failed to connect API to increase cart's quantity\");console.log(error);}));case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x4,_x5){return _ref3.apply(this,arguments);};}();};export var decreaseCart=function decreaseCart(cart_id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var prevCarts,matchedCarts,nextSelectedCount;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:prevCarts=getState().carts.list;matchedCarts=prevCarts.filter(function(cart){return cart.id==cart_id;});nextSelectedCount=matchedCarts[0].quantity-1;if(!(nextSelectedCount>0)){_context4.next=7;break;}return _context4.abrupt(\"return\",api.updateCarts(cart_id,nextSelectedCount).then(function(updatedCart){prevCarts=prevCarts.filter(function(cart){return cart.id!=cart_id;});prevCarts.push(updatedCart);var subtotal=calculateSubtotal(prevCarts);dispatch(decreaseCartAction(prevCarts,subtotal));}).catch(function(error){alert(\"Failed to connect API to decrease cart's quantity\");console.log(error);}));case 7:return _context4.abrupt(\"return\",api.deleteCart(cart_id).then(function(deletedCart){prevCarts=prevCarts.filter(function(cart){return cart.id!=cart_id;});var subtotal=calculateSubtotal(prevCarts);dispatch(decreaseCartAction(prevCarts,subtotal));}).catch(function(error){alert(\"Failed to connect API to decrease cart's quantity\");console.log(error);}));case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x6,_x7){return _ref4.apply(this,arguments);};}();};var calculateSubtotal=function calculateSubtotal(carts){var subtotal=0;for(var key in carts){subtotal+=Number(carts[key].item.price)*carts[key].quantity;}return subtotal;};","map":{"version":3,"sources":["C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/src/reducks/carts/operations.js"],"names":["API","addCartAction","fetchCartItemsAction","increaseCartAction","decreaseCartAction","push","api","CARTS_KEY","fetchCarts","dispatch","getCarts","then","carts","subtotal","calculateSubtotal","catch","error","alert","addCart","item","getState","addCarts","id","addedCart","prevCarts","list","console","log","increaseCart","cart_id","matchedCarts","filter","cart","nextSelectedCount","quantity","updateCarts","updatedCart","decreaseCart","deleteCart","deletedCart","key","Number","price"],"mappings":"+PAAA,MAAOA,CAAAA,GAAP,KAAgB,WAAhB,CACA,OACEC,aADF,CAEEC,oBAFF,CAGEC,kBAHF,CAIEC,kBAJF,KAKO,WALP,CAMA,OAASC,IAAT,KAAqB,wBAArB,CAEA,GAAMC,CAAAA,GAAG,CAAG,GAAIN,CAAAA,GAAJ,EAAZ,CACA,GAAMO,CAAAA,SAAS,CAAG,WAAlB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,+FAAO,iBAAOC,QAAP,kJACEH,GAAG,CACPI,QADI,GAEJC,IAFI,CAEC,SAACC,KAAD,CAAW,CACf,GAAMC,CAAAA,QAAQ,CAAGC,iBAAiB,CAACF,KAAD,CAAlC,CACAH,QAAQ,CAACP,oBAAoB,CAACU,KAAD,CAAQC,QAAR,CAArB,CAAR,CACD,CALI,EAMJE,KANI,CAME,SAACC,KAAD,CAAW,CAChBC,KAAK,CAAC,gCAAD,CAAL,CACD,CARI,CADF,wDAAP,+DAWD,CAZM,CAcP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CAC/B,gGAAO,kBAAOV,QAAP,CAAiBW,QAAjB,uJACEd,GAAG,CACPe,QADI,CACKF,IAAI,CAACG,EADV,EAEJX,IAFI,CAEC,SAACY,SAAD,CAAe,CACnB,GAAIC,CAAAA,SAAS,CAAGJ,QAAQ,GAAGR,KAAX,CAAiBa,IAAjC,CACAF,SAAS,CAAC,MAAD,CAAT,CAAoBJ,IAApB,CACAK,SAAS,CAACnB,IAAV,CAAekB,SAAf,EACA,GAAMV,CAAAA,QAAQ,CAAGC,iBAAiB,CAACU,SAAD,CAAlC,CACAf,QAAQ,CAACR,aAAa,CAACuB,SAAD,CAAYX,QAAZ,CAAd,CAAR,CACD,CARI,EASJE,KATI,CASE,SAACC,KAAD,CAAW,CAChBC,KAAK,CAAC,mCAAD,CAAL,CACAS,OAAO,CAACC,GAAR,CAAYX,KAAZ,EACD,CAZI,CADF,0DAAP,qEAeD,CAhBM,CAkBP,MAAO,IAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,OAAD,CAAa,CACvC,gGAAO,kBAAOpB,QAAP,CAAiBW,QAAjB,mKACDI,SADC,CACWJ,QAAQ,GAAGR,KAAX,CAAiBa,IAD5B,CAEDK,YAFC,CAEcN,SAAS,CAACO,MAAV,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,EAAL,EAAWO,OAArB,EAAjB,CAFd,CAGDI,iBAHC,CAGmBH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,QAAhB,CAA2B,CAH9C,kCAIE5B,GAAG,CACP6B,WADI,CACQN,OADR,CACiBI,iBADjB,EAEJtB,IAFI,CAEC,SAACyB,WAAD,CAAiB,CACrBZ,SAAS,CAAGA,SAAS,CAACO,MAAV,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,EAAL,EAAWO,OAArB,EAAjB,CAAZ,CACAL,SAAS,CAACnB,IAAV,CAAe+B,WAAf,EACA,GAAMvB,CAAAA,QAAQ,CAAGC,iBAAiB,CAACU,SAAD,CAAlC,CACAf,QAAQ,CAACN,kBAAkB,CAACqB,SAAD,CAAYX,QAAZ,CAAnB,CAAR,CACD,CAPI,EAQJE,KARI,CAQE,SAACC,KAAD,CAAW,CAChBC,KAAK,CAAC,mDAAD,CAAL,CACAS,OAAO,CAACC,GAAR,CAAYX,KAAZ,EACD,CAXI,CAJF,0DAAP,qEAiBD,CAlBM,CAoBP,MAAO,IAAMqB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,OAAD,CAAa,CACvC,gGAAO,kBAAOpB,QAAP,CAAiBW,QAAjB,mKACDI,SADC,CACWJ,QAAQ,GAAGR,KAAX,CAAiBa,IAD5B,CAEDK,YAFC,CAEcN,SAAS,CAACO,MAAV,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,EAAL,EAAWO,OAArB,EAAjB,CAFd,CAGDI,iBAHC,CAGmBH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,QAAhB,CAA2B,CAH9C,MAIDD,iBAAiB,CAAG,CAJnB,4DAMI3B,GAAG,CACP6B,WADI,CACQN,OADR,CACiBI,iBADjB,EAEJtB,IAFI,CAEC,SAACyB,WAAD,CAAiB,CACrBZ,SAAS,CAAGA,SAAS,CAACO,MAAV,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,EAAL,EAAWO,OAArB,EAAjB,CAAZ,CACAL,SAAS,CAACnB,IAAV,CAAe+B,WAAf,EACA,GAAMvB,CAAAA,QAAQ,CAAGC,iBAAiB,CAACU,SAAD,CAAlC,CACAf,QAAQ,CAACL,kBAAkB,CAACoB,SAAD,CAAYX,QAAZ,CAAnB,CAAR,CACD,CAPI,EAQJE,KARI,CAQE,SAACC,KAAD,CAAW,CAChBC,KAAK,CAAC,mDAAD,CAAL,CACAS,OAAO,CAACC,GAAR,CAAYX,KAAZ,EACD,CAXI,CANJ,0CAoBIV,GAAG,CACPgC,UADI,CACOT,OADP,EAEJlB,IAFI,CAEC,SAAC4B,WAAD,CAAiB,CACrBf,SAAS,CAAGA,SAAS,CAACO,MAAV,CAAiB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACV,EAAL,EAAWO,OAArB,EAAjB,CAAZ,CACA,GAAMhB,CAAAA,QAAQ,CAAGC,iBAAiB,CAACU,SAAD,CAAlC,CACAf,QAAQ,CAACL,kBAAkB,CAACoB,SAAD,CAAYX,QAAZ,CAAnB,CAAR,CACD,CANI,EAOJE,KAPI,CAOE,SAACC,KAAD,CAAW,CAChBC,KAAK,CAAC,mDAAD,CAAL,CACAS,OAAO,CAACC,GAAR,CAAYX,KAAZ,EACD,CAVI,CApBJ,0DAAP,qEAiCD,CAlCM,CAoCP,GAAMF,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACF,KAAD,CAAW,CACnC,GAAIC,CAAAA,QAAQ,CAAG,CAAf,CACA,IAAK,GAAI2B,CAAAA,GAAT,GAAgB5B,CAAAA,KAAhB,CAAuB,CACrBC,QAAQ,EAAI4B,MAAM,CAAC7B,KAAK,CAAC4B,GAAD,CAAL,CAAWrB,IAAX,CAAgBuB,KAAjB,CAAN,CAAgC9B,KAAK,CAAC4B,GAAD,CAAL,CAAWN,QAAvD,CACD,CACD,MAAOrB,CAAAA,QAAP,CACD,CAND","sourcesContent":["import API from \"../../API\";\nimport {\n  addCartAction,\n  fetchCartItemsAction,\n  increaseCartAction,\n  decreaseCartAction,\n} from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchCarts = () => {\n  return async (dispatch) => {\n    return api\n      .getCarts()\n      .then((carts) => {\n        const subtotal = calculateSubtotal(carts);\n        dispatch(fetchCartItemsAction(carts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API: /carts/\");\n      });\n  };\n};\n\nexport const addCart = (item) => {\n  return async (dispatch, getState) => {\n    return api\n      .addCarts(item.id)\n      .then((addedCart) => {\n        let prevCarts = getState().carts.list;\n        addedCart[\"item\"] = item;\n        prevCarts.push(addedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(addCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to add cart\");\n        console.log(error);\n      });\n  };\n};\n\nexport const increaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id == cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity + 1;\n    return api\n      .updateCarts(cart_id, nextSelectedCount)\n      .then((updatedCart) => {\n        prevCarts = prevCarts.filter((cart) => cart.id != cart_id);\n        prevCarts.push(updatedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(increaseCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to increase cart's quantity\");\n        console.log(error);\n      });\n  };\n};\n\nexport const decreaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id == cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity - 1;\n    if (nextSelectedCount > 0) {\n      // if quantity is more than 0, update\n      return api\n        .updateCarts(cart_id, nextSelectedCount)\n        .then((updatedCart) => {\n          prevCarts = prevCarts.filter((cart) => cart.id != cart_id);\n          prevCarts.push(updatedCart);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    } else {\n      // if quantity is 0, delete\n      return api\n        .deleteCart(cart_id)\n        .then((deletedCart) => {\n          prevCarts = prevCarts.filter((cart) => cart.id != cart_id);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    }\n  };\n};\n\nconst calculateSubtotal = (carts) => {\n  let subtotal = 0;\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].quantity;\n  }\n  return subtotal;\n};\n"]},"metadata":{},"sourceType":"module"}