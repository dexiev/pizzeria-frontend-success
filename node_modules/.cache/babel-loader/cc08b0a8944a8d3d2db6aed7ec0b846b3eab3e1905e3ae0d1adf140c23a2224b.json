{"ast":null,"code":"import API from\"../../API\";import{signInAction,signUpAction,signOutAction}from\"./actions\";import{push}from\"connected-react-router\";const api=new API();const LOGIN_USER_KEY=\"LOGIN_USER_KEY\";export const fetchUserFromLocalStorage=()=>{return async dispatch=>{const userJSON=localStorage.getItem(LOGIN_USER_KEY);if(userJSON&&userJSON.token!==\"\"){dispatch(signInAction(JSON.parse(userJSON)));}};};export const signUp=(user_name,email,password)=>{return async dispatch=>{// Validation\nif(user_name===\"\"||email===\"\"||password===\"\"){alert(\"Please fill out name, email, and password.\");return false;}return api.signUp(user_name,email,password).then(user=>{dispatch(signUpAction(user));localStorage.setItem(LOGIN_USER_KEY,JSON.stringify(user));dispatch(push(\"/\"));}).catch(error=>{alert(\"Failed to connect API \");console.log(error);});};};export const signIn=(email,password)=>{return async dispatch=>{// Validation\nif(email===\"\"||password===\"\"){alert(\"Please fill out email and password.\");return false;}return api.signIn(email,password).then(user=>{dispatch(signInAction(user));localStorage.setItem(LOGIN_USER_KEY,JSON.stringify(user));dispatch(push(\"/\"));}).catch(error=>{alert(\"Failed to connect API to add a post\");console.log(error);});};};export const signOut=()=>{return async dispatch=>{dispatch(signOutAction());localStorage.removeItem(LOGIN_USER_KEY);dispatch(push(\"/signin\"));};};","map":{"version":3,"names":["API","signInAction","signUpAction","signOutAction","push","api","LOGIN_USER_KEY","fetchUserFromLocalStorage","dispatch","userJSON","localStorage","getItem","token","JSON","parse","signUp","user_name","email","password","alert","then","user","setItem","stringify","catch","error","console","log","signIn","signOut","removeItem"],"sources":["C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/src/reducks/user/operations.js"],"sourcesContent":["import API from \"../../API\";\nimport { signInAction, signUpAction, signOutAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\n\nexport const fetchUserFromLocalStorage = () => {\n  return async (dispatch) => {\n    const userJSON = localStorage.getItem(LOGIN_USER_KEY);\n    if (userJSON && userJSON.token !== \"\") {\n      dispatch(signInAction(JSON.parse(userJSON)));\n    }\n  };\n};\n\nexport const signUp = (user_name, email, password) => {\n  return async (dispatch) => {\n    // Validation\n    if (user_name === \"\" || email === \"\" || password === \"\") {\n      alert(\"Please fill out name, email, and password.\");\n      return false;\n    }\n\n    return api\n      .signUp(user_name, email, password)\n      .then((user) => {\n        dispatch(signUpAction(user));\n        localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n        dispatch(push(\"/\"));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API \");\n        console.log(error);\n      });\n  };\n};\n\nexport const signIn = (email, password) => {\n  return async (dispatch) => {\n    // Validation\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out email and password.\");\n      return false;\n    }\n\n    return api\n      .signIn(email, password)\n      .then((user) => {\n        dispatch(signInAction(user));\n        localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n        dispatch(push(\"/\"));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to add a post\");\n        console.log(error);\n      });\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    dispatch(signOutAction());\n    localStorage.removeItem(LOGIN_USER_KEY);\n    dispatch(push(\"/signin\"));\n  };\n};\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,WAAW,CAC3B,OAASC,YAAY,CAAEC,YAAY,CAAEC,aAAa,KAAQ,WAAW,CACrE,OAASC,IAAI,KAAQ,wBAAwB,CAE7C,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAL,GAAG,CAAC,CAAC,CACrB,KAAM,CAAAM,cAAc,CAAG,gBAAgB,CAEvC,MAAO,MAAM,CAAAC,yBAAyB,CAAGA,CAAA,GAAM,CAC7C,MAAO,MAAO,CAAAC,QAAQ,EAAK,CACzB,KAAM,CAAAC,QAAQ,CAAGC,YAAY,CAACC,OAAO,CAACL,cAAc,CAAC,CACrD,GAAIG,QAAQ,EAAIA,QAAQ,CAACG,KAAK,GAAK,EAAE,CAAE,CACrCJ,QAAQ,CAACP,YAAY,CAACY,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CAAC,CAAC,CAC9C,CACF,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAM,MAAM,CAAGA,CAACC,SAAS,CAAEC,KAAK,CAAEC,QAAQ,GAAK,CACpD,MAAO,MAAO,CAAAV,QAAQ,EAAK,CACzB;AACA,GAAIQ,SAAS,GAAK,EAAE,EAAIC,KAAK,GAAK,EAAE,EAAIC,QAAQ,GAAK,EAAE,CAAE,CACvDC,KAAK,CAAC,4CAA4C,CAAC,CACnD,MAAO,MAAK,CACd,CAEA,MAAO,CAAAd,GAAG,CACPU,MAAM,CAACC,SAAS,CAAEC,KAAK,CAAEC,QAAQ,CAAC,CAClCE,IAAI,CAAEC,IAAI,EAAK,CACdb,QAAQ,CAACN,YAAY,CAACmB,IAAI,CAAC,CAAC,CAC5BX,YAAY,CAACY,OAAO,CAAChB,cAAc,CAAEO,IAAI,CAACU,SAAS,CAACF,IAAI,CAAC,CAAC,CAC1Db,QAAQ,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAC,CACrB,CAAC,CAAC,CACDoB,KAAK,CAAEC,KAAK,EAAK,CAChBN,KAAK,CAAC,wBAAwB,CAAC,CAC/BO,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CAAC,CAAC,CACN,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAG,MAAM,CAAGA,CAACX,KAAK,CAAEC,QAAQ,GAAK,CACzC,MAAO,MAAO,CAAAV,QAAQ,EAAK,CACzB;AACA,GAAIS,KAAK,GAAK,EAAE,EAAIC,QAAQ,GAAK,EAAE,CAAE,CACnCC,KAAK,CAAC,qCAAqC,CAAC,CAC5C,MAAO,MAAK,CACd,CAEA,MAAO,CAAAd,GAAG,CACPuB,MAAM,CAACX,KAAK,CAAEC,QAAQ,CAAC,CACvBE,IAAI,CAAEC,IAAI,EAAK,CACdb,QAAQ,CAACP,YAAY,CAACoB,IAAI,CAAC,CAAC,CAC5BX,YAAY,CAACY,OAAO,CAAChB,cAAc,CAAEO,IAAI,CAACU,SAAS,CAACF,IAAI,CAAC,CAAC,CAC1Db,QAAQ,CAACJ,IAAI,CAAC,GAAG,CAAC,CAAC,CACrB,CAAC,CAAC,CACDoB,KAAK,CAAEC,KAAK,EAAK,CAChBN,KAAK,CAAC,qCAAqC,CAAC,CAC5CO,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACpB,CAAC,CAAC,CACN,CAAC,CACH,CAAC,CAED,MAAO,MAAM,CAAAI,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,MAAO,CAAArB,QAAQ,EAAK,CACzBA,QAAQ,CAACL,aAAa,CAAC,CAAC,CAAC,CACzBO,YAAY,CAACoB,UAAU,CAACxB,cAAc,CAAC,CACvCE,QAAQ,CAACJ,IAAI,CAAC,SAAS,CAAC,CAAC,CAC3B,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}