{"ast":null,"code":"import axios from \"axios\";\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\nvar baseURL;\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\") {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\n//     // baseURL = \"https://backend-dq-dairyqueen-jithin.herokuapp.com/\";\n//     // baseURL=\"https://backend-sd-alisha.herokuapp.com/\";\n\n// }\nbaseURL = \"https://pizzeria-backend-success-1.onrender.com\";\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(config => {\n  if (localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common[\"Authorization\"] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.getPosts = async () => {\n      const posts = await api.get(\"/posts/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return posts;\n    };\n    this.addPost = async (name, body, image) => {\n      const formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"body\", body);\n      formData.append(\"image\", image);\n      const savedPost = await api.post(\"/posts/add/\", formData).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.deletePost = async id => {\n      const response = await api.delete(\"/posts/delete/\" + id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n    // ///////////////////////////////\n    // ITEM\n    // //////////////////////////////\n    this.getItems = async () => {\n      let url = \"/items/\";\n      const items = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return items;\n    };\n    this.signUp = async (user_name, email, password) => {\n      const savedPost = await api.post(\"/users/signup/\", {\n        user_name: user_name,\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.signIn = async (email, password) => {\n      const savedPost = await api.post(\"/users/signin/\", {\n        email: email,\n        password: password\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedPost;\n    };\n    this.getCarts = async () => {\n      const carts = await api.get(\"carts/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return carts;\n    };\n    this.addCarts = async item_id => {\n      const savedCart = await api.post(\"/carts/add/\", {\n        item: item_id,\n        quantity: 1\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n    this.updateCarts = async (cart_id, quantity) => {\n      const savedCart = await api.put(\"/carts/update/\" + cart_id + \"/\", {\n        quantity: quantity\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return savedCart;\n    };\n    this.deleteCart = async cart_id => {\n      const response = await api.delete(\"/carts/delete/\" + cart_id + \"/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return response;\n    };\n    this.orderAdd = async (params = {}) => {\n      const order = await api.post(\"/orders/add/\", params).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return order;\n    };\n  }\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","api","create","headers","interceptors","request","use","config","localStorage","getItem","common","JSON","parse","token","err","console","error","API","constructor","getPosts","posts","get","then","response","data","catch","Error","addPost","name","body","image","formData","FormData","append","savedPost","post","deletePost","id","delete","getItems","url","items","signUp","user_name","email","password","signIn","getCarts","carts","addCarts","item_id","savedCart","item","quantity","updateCarts","cart_id","put","deleteCart","orderAdd","params","order"],"sources":["C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/src/API.js"],"sourcesContent":["import axios from \"axios\";\n\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\"\n\nvar baseURL;\n// if (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\") {\n//     baseURL = process.env.REACT_APP_API_BASE_URL;\n// } else {\n//     // baseURL = \"https://backend-dq-dairyqueen-jithin.herokuapp.com/\";\n//     // baseURL=\"https://backend-sd-alisha.herokuapp.com/\";\n   \n// }\nbaseURL= \"https://pizzeria-backend-success-1.onrender.com\"\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.request.use(\n    (config) => {\n      if (localStorage.getItem(LOGIN_USER_KEY)) {\n        config.headers.common[\"Authorization\"] = JSON.parse(\n          localStorage.getItem(LOGIN_USER_KEY)\n        ).token;\n      }\n      return config;\n    },\n    (err) => {\n      console.error(err);\n    }\n  );\n\nexport default class API {\n    getPosts = async () => {\n        const posts = await api\n            .get(\"/posts/\")\n            .then((response) => {\n                return response.data\n            })\n            .catch((error) => {\n                throw new Error(error)\n            })\n        return posts\n    }\n    addPost = async (name, body, image) => {\n        const formData = new FormData();\n        formData.append(\"name\", name);\n        formData.append(\"body\", body);\n        formData.append(\"image\", image);\n        const savedPost = await api\n            .post(\"/posts/add/\", formData)\n            .then((response) => {\n                return response.data\n            })\n            .catch((error) => {\n                throw new Error(error)\n            })\n        return savedPost\n    }\n    deletePost = async (id) => {\n        const response = await api\n            .delete(\"/posts/delete/\" + id + \"/\")\n            .then((response) => {\n                return response.data\n            })\n            .catch((error) => {\n                throw new Error(error)\n            })\n        return response\n    }\n\n// ///////////////////////////////\n// ITEM\n// //////////////////////////////\n\ngetItems = async () => {\n    let url = \"/items/\"\n    const items = await api\n        .get(url)\n        .then((response) => {\n            return response.data\n        })\n        .catch((error) => {\n            throw new Error(error)\n        });\n    return items\n}\n\n\nsignUp = async (user_name, email, password) => {\n    const savedPost = await api\n      .post(\"/users/signup/\", {\n        user_name: user_name,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n\n\nsignIn = async (email, password) => {\n    const savedPost = await api\n      .post(\"/users/signin/\", {\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedPost;\n  };\n\n  getCarts = async () => {\n    const carts = await api\n      .get(\"carts/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return carts;\n  };\n  \n  addCarts = async (item_id) => {\n    const savedCart = await api\n      .post(\"/carts/add/\", {\n        item: item_id,\n        quantity: 1,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedCart;\n  };\n\n  updateCarts = async (cart_id, quantity) => {\n    const savedCart = await api\n      .put(\"/carts/update/\" + cart_id + \"/\", {\n        quantity: quantity,\n      })\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return savedCart;\n  };\n\n  deleteCart = async (cart_id) => {\n    const response = await api\n      .delete(\"/carts/delete/\" + cart_id + \"/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return response;\n  };\n\n  orderAdd = async (params = {}) => {\n    const order = await api\n      .post(\"/orders/add/\", params)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return order;\n  };\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}