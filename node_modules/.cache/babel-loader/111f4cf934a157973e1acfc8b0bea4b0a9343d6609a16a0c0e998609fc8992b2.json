{"ast":null,"code":"import API from\"../../API\";import{addCartAction,fetchCartItemsAction,increaseCartAction,decreaseCartAction}from\"./actions\";import{push}from\"connected-react-router\";const api=new API();const CARTS_KEY=\"CARTS_KEY\";export const fetchCarts=()=>{return async dispatch=>{return api.getCarts().then(carts=>{const subtotal=calculateSubtotal(carts);dispatch(fetchCartItemsAction(carts,subtotal));}).catch(error=>{alert(\"Failed to connect API: /carts/\");});};};export const addCart=item=>{return async(dispatch,getState)=>{return api.addCarts(item.id).then(addedCart=>{let prevCarts=getState().carts.list;addedCart[\"item\"]=item;prevCarts.push(addedCart);const subtotal=calculateSubtotal(prevCarts);dispatch(addCartAction(prevCarts,subtotal));}).catch(error=>{alert(\"Failed to connect API to add cart\");console.log(error);});};};export const increaseCart=cart_id=>{return async(dispatch,getState)=>{let prevCarts=getState().carts.list;let matchedCarts=prevCarts.filter(cart=>cart.id==cart_id);let nextSelectedCount=matchedCarts[0].quantity+1;return api.updateCarts(cart_id,nextSelectedCount).then(updatedCart=>{prevCarts=prevCarts.filter(cart=>cart.id!=cart_id);prevCarts.push(updatedCart);const subtotal=calculateSubtotal(prevCarts);dispatch(increaseCartAction(prevCarts,subtotal));}).catch(error=>{alert(\"Failed to connect API to increase cart's quantity\");console.log(error);});};};export const decreaseCart=cart_id=>{return async(dispatch,getState)=>{let prevCarts=getState().carts.list;let matchedCarts=prevCarts.filter(cart=>cart.id==cart_id);let nextSelectedCount=matchedCarts[0].quantity-1;if(nextSelectedCount>0){// if quantity is more than 0, update\nreturn api.updateCarts(cart_id,nextSelectedCount).then(updatedCart=>{prevCarts=prevCarts.filter(cart=>cart.id!=cart_id);prevCarts.push(updatedCart);const subtotal=calculateSubtotal(prevCarts);dispatch(decreaseCartAction(prevCarts,subtotal));}).catch(error=>{alert(\"Failed to connect API to decrease cart's quantity\");console.log(error);});}else{// if quantity is 0, delete\nreturn api.deleteCart(cart_id).then(deletedCart=>{prevCarts=prevCarts.filter(cart=>cart.id!=cart_id);const subtotal=calculateSubtotal(prevCarts);dispatch(decreaseCartAction(prevCarts,subtotal));}).catch(error=>{alert(\"Failed to connect API to decrease cart's quantity\");console.log(error);});}};};const calculateSubtotal=carts=>{let subtotal=0;for(let key in carts){subtotal+=Number(carts[key].item.price)*carts[key].quantity;}return subtotal;};","map":{"version":3,"names":["API","addCartAction","fetchCartItemsAction","increaseCartAction","decreaseCartAction","push","api","CARTS_KEY","fetchCarts","dispatch","getCarts","then","carts","subtotal","calculateSubtotal","catch","error","alert","addCart","item","getState","addCarts","id","addedCart","prevCarts","list","console","log","increaseCart","cart_id","matchedCarts","filter","cart","nextSelectedCount","quantity","updateCarts","updatedCart","decreaseCart","deleteCart","deletedCart","key","Number","price"],"sources":["C:/Users/User/Desktop/Dino-s_Pizzeria/frontend/src/reducks/carts/operations.js"],"sourcesContent":["import API from \"../../API\";\nimport {\n  addCartAction,\n  fetchCartItemsAction,\n  increaseCartAction,\n  decreaseCartAction,\n} from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchCarts = () => {\n  return async (dispatch) => {\n    return api\n      .getCarts()\n      .then((carts) => {\n        const subtotal = calculateSubtotal(carts);\n        dispatch(fetchCartItemsAction(carts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API: /carts/\");\n      });\n  };\n};\n\nexport const addCart = (item) => {\n  return async (dispatch, getState) => {\n    return api\n      .addCarts(item.id)\n      .then((addedCart) => {\n        let prevCarts = getState().carts.list;\n        addedCart[\"item\"] = item;\n        prevCarts.push(addedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(addCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to add cart\");\n        console.log(error);\n      });\n  };\n};\n\nexport const increaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id == cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity + 1;\n    return api\n      .updateCarts(cart_id, nextSelectedCount)\n      .then((updatedCart) => {\n        prevCarts = prevCarts.filter((cart) => cart.id != cart_id);\n        prevCarts.push(updatedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(increaseCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to increase cart's quantity\");\n        console.log(error);\n      });\n  };\n};\n\nexport const decreaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id == cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity - 1;\n    if (nextSelectedCount > 0) {\n      // if quantity is more than 0, update\n      return api\n        .updateCarts(cart_id, nextSelectedCount)\n        .then((updatedCart) => {\n          prevCarts = prevCarts.filter((cart) => cart.id != cart_id);\n          prevCarts.push(updatedCart);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    } else {\n      // if quantity is 0, delete\n      return api\n        .deleteCart(cart_id)\n        .then((deletedCart) => {\n          prevCarts = prevCarts.filter((cart) => cart.id != cart_id);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    }\n  };\n};\n\nconst calculateSubtotal = (carts) => {\n  let subtotal = 0;\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].quantity;\n  }\n  return subtotal;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}